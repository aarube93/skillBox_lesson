public class ObjectLesson {
    public static void main(String[] args) {
        doEquals();
        doGetObject();
        doToString();
    }
//Все классы в java унаследованы от класса Object и имеют ряд похожих свойств и методов.
    //1. Методы, имеющие отношение к копированию и сравнению объектов:
    //clone()

    //equals(Object obj), возвращает тру/фолс. В исходном коде метода сравниваются ссылки на переданный объект.
    //То есть, если ссылки раны то это точно одинаковый объект. Если возвращает фолс, то это еще не точно разные объекты.
    //Убедимся в этом и создадим 2 одинаковых объекта, но назовем их по разному:
    public static void doEquals() {
        Bus bus1 = new Bus(0.001);
        Bus bus2 = new Bus(0.001);
        System.out.println(bus1.equals(bus2));//false//после создания переопределение метода equals в классе Bus: true
//что бы сравнивать АВТОБУСЫ, а не объекты, мы должны переопределить этот метод в том классе,
// объекты которого мы хотим сравнивать.
    }

    //hashCode() - возвращает целое число(в 16ричной системе), если метод не переопределен, то это число
    // рассчитывается виртуальной машиной джава с тем что бы упростить сравнение объектов. Если метод не переопределен,
    // то его значение будет одинаковым для одинаковых объектов в процессе одного выполнения программы.
    // Причем у разных объектов это число может быть одинаковым.

    //finalize(), с 9-ой версии джава признан устаревшим(deprecated), но ввиду медленного обновления версий джава в
    // коммерческих структурах, он может встречаться в коде. Этот метод вызывается для удаления объектов из памяти
//джава машины, при наследовании его можно было использовать для освобождения как либо ресурсов или удалении того,
// что тоже стало ненужно вместе с удалением этого объекта.

    //Еще Один метод класса Object - это getClass()6 он возвращает класс текущего объекта.
//В джава классы тоже представлены объектами, объектами класса класс

    public static void doGetObject() {
        Bus bus = new Bus(0.002);
        Class Object = bus.getClass();
        System.out.println(Object.getClass());
    }

    //toString - еще один метод класса Object, он возвращает строковое представление объекта, а еще он вызывается у любого
//объекта, когда объект нужно превратить в строку, например если вы передаете объект в качестве параметра конструкции sout,
//
    public static void doToString() {
        Bus busToStr = new Bus(0.001);
        System.out.println(busToStr);//это будет то-же самое
        System.out.println(busToStr.toString());//метод toString() подсвечен серым, потому, что он вызывается автоматически
        System.out.println(busToStr.getClass().getName() + "@" +  Integer.toHexString(busToStr.hashCode()));// - то-же
//самое, только в ручном режиме.
        //Что бы получить более адекватное строковое представление объекта, нужно переопределить метод в
//родительском классе - Bus. Эти методы удобны для отладки кода.
    }
}


