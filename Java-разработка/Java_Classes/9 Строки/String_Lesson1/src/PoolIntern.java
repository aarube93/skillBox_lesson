public class PoolIntern {
    public static void main(String[] args) {
        internPool();
    }
    public static void internPool() {
//Известно, что при сравнивании двух объектов, сравниваются их ссылки на объект в памяти, а не само содержание объекта.
//В случае со строками в джава изоборели метод Pool"а, для экономии места в памяти - то есть на
// объекты String string ="a" и String string1 ="a" будет одинаковая ссылка из одного пула объектов. Рассмотрим пример:
        String a = "Alex";
        String b = "Alex";
        System.out.println("Значения одинаковы, но объекты различны: " + (a == b));//Ответ будет true, так как ссылки
// будут равны между собой. Такой способ хранения строк в памяти называется интернированием -StringInterning.

//Но если создать новый объект класса String:
        String c = "Alex";
        String d = new String("Alex");
        System.out.println("Значения одинаковы, но второй объект создан String d = new: " +(c==d));
//То такая строка не поподает в пул и хранится в памяти отдельно.
        //Но также, строки можно явно интернировать, то есть не занимать память и пользовать ссылкой на объект.
//Вот например:
        String e = new String("Alex").intern();
        System.out.println("Интернированная переменная 'е' сравнивается с переменной а: " + (a == e));
//Если в пуле такой ссылки небыло, то метод создаст пул с объектом и вернет ссылку на него. Вот например:
        String f = new String("Anton").intern();
        String g = new String("Anton").intern();
        System.out.println("Два интернированных объекта, пул для которых создан не был до ранее: " + (f==g));
    }
}
